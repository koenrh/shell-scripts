#!/bin/bash

readonly program="$(basename "${0}")"

if [[ ! $(command -v 'bundle-audit') ]]; then
  echo "This script requires 'bundle-audit'. Install it with:"
  echo
  echo "    gem install bundler-audit"
  echo
  exit 1
fi

usage() {
  echo "usage: ${program} <organisation> <repository>"
  echo
  echo "  NOTE: Add your GitHub username, and password (or your personal access"
  echo "  token) to your .netrc file as follows:"
  echo
  echo "    machine api.github.com"
  echo "      login <username>"
  echo "      password <password>"
  echo
  echo "    machine raw.githubusercontent.com"
  echo "      login <username>"
  echo "      password <password>"
  echo
}

audit_organisation() {
  local organisation="$1"
  local repositories_url="https://api.github.com/orgs/$organisation/repos?type=sources&per_page=100"

  local repositories
  local link

  link=$(curl -s -n -I "$repositories_url" | grep '^Link:')

  if [ -z "$link" ]; then
    repositories+=$(curl -s -n "$repositories_url" | jq -r '.[].name')

  else
    local last_page
    local page=1

    last_page="$(echo "$link" | sed -e 's/^Link:.*page=//g' -e 's/>.*$//g')"

    while [ "$page" -le "$last_page" ]; do
      repositories+=$(curl -s -n "$repositories_url&page=$page" | jq -r '.[].name')
      page=$((page + 1))
    done
  fi

  printf "organisation '%s': %s repositories\\n\\n" "$organisation" "$(echo -n "$repositories" | wc -l | tr -d '[:space:]')"

  for repository in $repositories
  do
    audit_repository "$organisation" "$repository"
    printf "\\n\\n"
  done
}

audit_repository() {
  local statuses
  local tmp_dir

  local organisation="$1"
  local repository="$2"

  tmp_dir=$(mktemp -d -t "$program-XXX")

  printf "%sauditing%s: %s\\n" "$(tput setaf 6)" "$(tput sgr 0)" "$organisation/$repository"

  statuses=$(curl -s -q -n -w "%{http_code}" \
    -o "$tmp_dir/#1" "https://raw.githubusercontent.com/$organisation/$repository/master/{Gemfile,Gemfile.lock}")

  if [ "$statuses" = 200200 ]; then
    pushd "$tmp_dir" &> /dev/null || exit
    bundle-audit check
    rm Gemfile Gemfile.lock
    popd &> /dev/null || exit
  else
    printf "%sno Gemfile and/or Gemfile.lock%s" "$(tput setaf 3)" "$(tput sgr 0)"
  fi
}

bundle-audit update 2> /dev/null
echo

if (( $# == 2 ))
then
  audit_repository "$@"
elif (( $# == 1))
then
  audit_organisation "$@"
else
  usage
  exit 1
fi
