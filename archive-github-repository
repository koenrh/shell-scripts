#!/bin/bash

readonly program="$(basename "${0}")"

usage() {
  echo "usage: ${program} <organisation> <repository> [output_directory]"
  echo
  echo "NOTE: in order to download GitHub issues, add your GitHub username,"\
    "and password or personal access token to your .netrc file:"
  echo
  echo "  machine api.github.com"
  echo "    login <username>"
  echo "    password <password>"
}

if (( $# < 2 ))
then
  usage
  exit 1
fi

org=$1
repo=$2
output_dir=${3-"."}

if [ ! -d "$output_dir" ]; then
  echo "specified output directory does not exist."
  exit 1
fi

working_dir=$(mktemp -d -t "$program")
pushd "$working_dir"

#if [[ -z "$output_dir" ]]; then
#  mkdir -p "$output_dir"
#fi

timestamp=$(date "+%Y%m%d%H%M")

# code
git clone --mirror "https://github.com/$org/$repo.git" \
  "$org-$repo-$timestamp.git"

# wiki
git clone --mirror "https://github.com/$org/$repo.wiki.git" \
  "$org-$repo.wiki-$timestamp.git"

# issues
curl --silent --disable --netrc \
  "https://api.github.com/repos/$org/$repo/issues" \
  > "$org-$repo.issues-$timestamp.json"

# create archive
tar czf "$org-$repo-$timestamp.tar.gz" \
  "$org-$repo-$timestamp.git" \
  "$org-$repo.wiki-$timestamp.git" \
  "$org-$repo.issues-$timestamp.json"

mv "$working_dir/$org-$repo-$timestamp.tar.gz" "$output_dir"

# remove remnants
rm -rf "$org-$repo-$timestamp.git" \
  "$org-$repo.wiki-$timestamp.git" \
  "$org-$repo.issues-$timestamp.json"

popd
